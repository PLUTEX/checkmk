#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 Checkmk GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

# NOTE: Careful when replacing the *-import below with a more specific import. This can cause
# problems because it might remove variables from the check-context which are necessary for
# resolving legacy discovery results such as [("SUMMARY", "diskstat_default_levels")]. Furthermore,
# it might also remove variables needed for accessing discovery rulesets.
from cmk.base.check_legacy_includes.df import *  # pylint: disable=wildcard-import,unused-wildcard-import

# NOTE: Careful when replacing the *-import below with a more specific import. This can cause
# problems because it might remove variables from the check-context which are necessary for
# resolving legacy discovery results such as [("SUMMARY", "diskstat_default_levels")]. Furthermore,
# it might also remove variables needed for accessing discovery rulesets.
from cmk.base.check_legacy_includes.hr_fs import *  # pylint: disable=wildcard-import,unused-wildcard-import

# NOTE: Careful when replacing the *-import below with a more specific import. This can cause
# problems because it might remove variables from the check-context which are necessary for
# resolving legacy discovery results such as [("SUMMARY", "diskstat_default_levels")]. Furthermore,
# it might also remove variables needed for accessing discovery rulesets.
from cmk.base.check_legacy_includes.size_trend import *  # pylint: disable=wildcard-import,unused-wildcard-import

# NOTE: Careful when replacing the *-import below with a more specific import. This can cause
# problems because it might remove variables from the check-context which are necessary for
# resolving legacy discovery results such as [("SUMMARY", "diskstat_default_levels")]. Furthermore,
# it might also remove variables needed for accessing discovery rulesets.
from cmk.base.check_legacy_includes.ucd_hr import *  # pylint: disable=wildcard-import,unused-wildcard-import

from cmk.base.check_api import host_extra_conf, host_name
from cmk.base.plugins.agent_based.utils.df import df_discovery

factory_settings["filesystem_default_levels"] = FILESYSTEM_DEFAULT_LEVELS

inventory_df_exclude_mountpoints_prefixes = ['/run/user/', '/var/lib/ceph/osd/', '/run/k3s/', '/var/lib/kubelet/pods/']

def inventory_hr_fs(info):
    mplist = []
    for hrtype, hrdescr, _hrunits, hrsize, _hrused in info:
        hrdescr = fix_hr_fs_mountpoint(hrdescr)
        # NOTE: These types are defined in the HR-TYPES-MIB.
        #       .1.3.6.1.2.1.25.2.1 +
        #                           +-> .4 "hrStorageFixedDisk"
        if hrtype in [ ".1.3.6.1.2.1.25.2.1.4",
                       # This strange value below is needed for VCenter Appliances
                       ".1.3.6.1.2.1.25.2.3.1.2.4"] and \
                hrdescr not in inventory_df_exclude_mountpoints and \
                not any(hrdescr.startswith(prefix) for prefix in inventory_df_exclude_mountpoints_prefixes) and \
                saveint(hrsize) != 0:
            mplist.append(hrdescr)
    return df_discovery(host_extra_conf(host_name(), filesystem_groups), mplist)

check_info["hr_fs"] = {
    "inventory_function": inventory_hr_fs,
    "check_function": check_hr_fs,
    "service_description": "Filesystem %s",
    "has_perfdata": True,
    "snmp_info": (
        ".1.3.6.1.2.1.25.2.3.1",
        [
            2,  # hrStorageType
            3,  # hrStorageDescr
            4,  # hrStorageAllocationUnits
            5,  # hrStorageSize
            6,  # hrStorageUsed
        ],
    ),
    "snmp_scan_function": is_hr,
    "group": "filesystem",
    "default_levels_variable": "filesystem_default_levels",
    "management_board": HOST_ONLY,
}
